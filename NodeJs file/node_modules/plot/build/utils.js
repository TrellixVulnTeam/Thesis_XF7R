"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.determineType = exports.isUndefined = exports.isArray = exports.isNumber = exports.isBoolean = exports.isDate = exports.isString = exports.isFunction = exports.isObject = exports.toMap = void 0;
var t = require("typy").default;
//
// Helper function to map an array of objects.
//
function toMap(items, keySelector, valueSelector) {
    var output = {};
    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
        var item = items_1[_i];
        var key = keySelector(item);
        output[key] = valueSelector(item);
    }
    return output;
}
exports.toMap = toMap;
function isObject(v) {
    return t(v).isObject && !isDate(v);
}
exports.isObject = isObject;
function isFunction(v) {
    return t(v).isFunction;
}
exports.isFunction = isFunction;
function isString(v) {
    return t(v).isString;
}
exports.isString = isString;
function isDate(v) {
    return Object.prototype.toString.call(v) === "[object Date]";
}
exports.isDate = isDate;
function isBoolean(v) {
    return t(v).isBoolean;
}
exports.isBoolean = isBoolean;
function isNumber(v) {
    return t(v).isNumber;
}
exports.isNumber = isNumber;
function isArray(v) {
    return t(v).isArray;
}
exports.isArray = isArray;
function isUndefined(v) {
    return v === undefined;
}
exports.isUndefined = isUndefined;
//
// Determine the type of a value.
//
function determineType(value) {
    if (value === undefined) {
        return "undefined";
    }
    else if (isNumber(value)) {
        return "number";
    }
    else if (isString(value)) {
        return "string";
    }
    else if (value instanceof Date) {
        return "date";
    }
    else if (isBoolean(value)) {
        return "boolean";
    }
    else {
        return "unsupported";
    }
}
exports.determineType = determineType;
//# sourceMappingURL=utils.js.map